$date
	Sun Nov 10 02:20:18 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module controller_tb $end
$var wire 1 ! RegWrite $end
$var wire 1 " RegDst $end
$var wire 1 # PCWriteCond $end
$var wire 1 $ PCWrite $end
$var wire 2 % PCSource [1:0] $end
$var wire 1 & MemtoReg $end
$var wire 1 ' MemWrite $end
$var wire 1 ( MemRead $end
$var wire 1 ) IorD $end
$var wire 1 * IRWrite $end
$var wire 2 + ALUSrcB [1:0] $end
$var wire 1 , ALUSrcA $end
$var wire 2 - ALUOp [1:0] $end
$var reg 1 . clk $end
$var reg 6 / opcode [5:0] $end
$var reg 1 0 reset $end
$scope module cont $end
$var wire 1 . clk $end
$var wire 6 1 opcode [5:0] $end
$var wire 1 0 reset $end
$var wire 4 2 S [3:0] $end
$var wire 1 ! RegWrite $end
$var wire 1 " RegDst $end
$var wire 1 # PCWriteCond $end
$var wire 1 $ PCWrite $end
$var wire 2 3 PCSource [1:0] $end
$var wire 4 4 NS [3:0] $end
$var wire 1 & MemtoReg $end
$var wire 1 ' MemWrite $end
$var wire 1 ( MemRead $end
$var wire 1 ) IorD $end
$var wire 1 * IRWrite $end
$var wire 2 5 ALUSrcB [1:0] $end
$var wire 1 , ALUSrcA $end
$var wire 2 6 ALUOp [1:0] $end
$scope module cl $end
$var wire 1 , ALUSrcA $end
$var wire 1 ) IorD $end
$var wire 1 ( MemRead $end
$var wire 1 $ PCWrite $end
$var wire 1 ! RegWrite $end
$var wire 6 7 opcode [5:0] $end
$var wire 17 8 w [0:16] $end
$var wire 4 9 S [3:0] $end
$var wire 1 " RegDst $end
$var wire 1 # PCWriteCond $end
$var wire 2 : PCSource [1:0] $end
$var wire 4 ; NS [3:0] $end
$var wire 1 & MemtoReg $end
$var wire 1 ' MemWrite $end
$var wire 1 * IRWrite $end
$var wire 2 < ALUSrcB [1:0] $end
$var wire 2 = ALUOp [1:0] $end
$upscope $end
$scope module stat $end
$var wire 4 > NS [3:0] $end
$var wire 1 . clk $end
$var wire 1 0 reset $end
$var reg 4 ? S [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?
b0xxx >
bx =
bx <
b0xxx ;
bx :
bx 9
bx00x0000 8
b0 7
bx 6
bx 5
b0xxx 4
bx 3
bx 2
b0 1
10
b0 /
0.
bx -
x,
bx +
x*
x)
x(
x'
x&
bx %
x$
x#
x"
x!
$end
#1
0,
b1 4
b1 ;
b1 >
1$
0#
0!
0&
0)
1(
b1 +
b1 5
b1 <
1*
b0 %
b0 3
b0 :
b0 -
b0 6
b0 =
0"
0'
b10000000000000000 8
b0 2
b0 9
b0 ?
00
#2
0$
0(
b110 4
b110 ;
b110 >
b11 +
b11 5
b11 <
0*
b1000000000010000 8
b1 2
b1 9
b1 ?
10
#5
1.
#10
0.
#15
1.
#20
0.
#25
1.
#30
0.
#35
1.
#40
0.
#45
b10 4
b10 ;
b10 >
b1000000000000100 8
1.
b100011 /
b100011 1
b100011 7
#50
0.
#55
1.
#60
0.
#65
1.
#70
0.
#75
1.
#80
0.
#85
1.
#90
0.
#95
b1000000000000010 8
1.
b101011 /
b101011 1
b101011 7
#100
0.
#105
1.
#110
0.
#115
1.
#120
0.
#125
1.
#130
0.
#135
b1000 4
b1000 ;
b1000 >
b1000000000100000 8
1.
b100 /
b100 1
b100 7
#140
0.
#145
1.
#150
0.
#155
1.
#160
0.
#165
b1001 4
b1001 ;
b1001 >
b1000000001000000 8
1.
b10 /
b10 1
b10 7
